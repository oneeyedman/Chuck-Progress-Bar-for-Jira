function camelcase(str){const parts=str.toLowerCase().split(" ");for(let i=0;i<parts.length;i++)if(i>0){const letters=parts[i].split("");letters[0]=letters[0].toUpperCase(),parts[i]=letters.join("")}return parts.join("")}function getColumns(list){const cols=list.querySelectorAll(".ghx-column"),result={};return cols.forEach(col=>{const element=col.querySelector("h2"),dataId=col.dataset.id,title=col.querySelector("h2").dataset.tooltip;result[camelcase(title)]={el:element,dataId:dataId}}),result}function populateKanban(obj){for(const prop in obj){const{dataId:dataId}=obj[prop],col=document.querySelector(`[data-column-id="${dataId}"]`),issues=col.querySelectorAll(".ghx-issue").length;obj[prop].issues=issues}return obj}function getTotalIssues(obj){let result=0;for(const prop in obj)result+=obj[prop].issues;return result}function getIssueSummary(obj){const total=getTotalIssues(obj),{toDo:toDo,done:done}=obj,pending=toDo.issues,doneIssues=done.issues;return{pending:pending,done:doneIssues,total:total}}function getChuckProgressBarTheme(theme){const themes=["rainbow","pride"],userTheme=(theme=theme.trim().toLocaleLowerCase())&&themes.includes(theme)?theme:"default";return userTheme}function drawChuckProgressBar(container,obj,theme="default"){const userTheme=getChuckProgressBarTheme(theme);deleteUserComponent(".chuck-progress-bar");const{done:done,total:total}=obj,percentage=100*done/total,progressBar=`<section class="chuck-progress-bar chuck-progress-bar--${userTheme}">\n\t\t<style>\n\t\t\t.chuck-progress-bar {\n\t\t\t\tbackground-color: #f5f4f7;\n\t\t\t\tborder-radius: 4px; \n\t\t\t\tpadding: 10px 5px;\n\t\t\t\tmargin-bottom: 7px;\n\t\t\t}\n\t\t\t.chuck-progress-bar__title {\n\t\t\t\tcolor: #5e6c84;\n\t\t\t\tfont-size: .85714286em;\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 5px 0 15px 5px;\n\t\t\t\tline-height: 1.33333333;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tfont-weight: 400;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\twhite-space: nowrap;\n\t\t\t}\n\t\t\t.chuck-progress-bar__track {\n\t\t\t\tbackground-color: #e5e6e7;\n\t\t\t\tborder-radius: 2px;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\t\t\t.chuck-progress-bar__current {\n\t\t\t\tbackground-color:#0052cc;\n\t\t\t\tborder-radius: 2px;\n\t\t\t\tbox-shadow: 0 0 5px rgba(0,0,0,.2);\n\t\t\t\theight: 30px;\n\t\t\t}\n\n\t\t\t.chuck-progress-bar--rainbow .chuck-progress-bar__current {\n\t\t\t\tbackground: linear-gradient(to right, red, orange, yellow, green, blue, purple);\n\t\t\t}\n\t\t\t.chuck-progress-bar--pride .chuck-progress-bar__current {\n\t\t\t\tbackground: linear-gradient(to right, red 0%, red 16.66666666%, orange 16.66666666%, orange 33.33333333%, yellow 33.33333333%, yellow 50%, green 50%, green 66.66666666%, blue 66.66666666%, blue 83.33333333%, purple 83.33333333%, purple 100%);\n\t\t\t}\n\t\t</style>\n\t\t<h1 class="chuck-progress-bar__title">Chuck Progress bar FTW</h1>\n\t\t<div class="chuck-progress-bar__track">\n\t\t\t<div class="chuck-progress-bar__current" style="width:${percentage}%"></div>\n\t\t</div>\n\t</section>`;container.insertAdjacentHTML("afterbegin",progressBar)}function deleteUserComponent(selector){const el=document.querySelectorAll(selector);el&&el.forEach(el=>el.remove())}function drawColTotals(obj){for(const prop in obj){const header=document.querySelector(`.ghx-column[data-id="${obj[prop].dataId}"] h2`),label=header.dataset.tooltip;header.textContent=`${label} (${obj[prop].issues})`}}function initKanban(){const poolColumn=document.querySelector("#ghx-pool-column");if(poolColumn){const headerCols=poolColumn.querySelector(".ghx-column-headers"),kanban=getColumns(headerCols);populateKanban(kanban),drawChuckProgressBar(poolColumn,getIssueSummary(kanban),"rainbow"),drawColTotals(kanban)}}initKanban(),initKanban();export{camelcase,getColumns,populateKanban,getTotalIssues,getIssueSummary,deleteUserComponent,drawChuckProgressBar,getChuckProgressBarTheme,drawColTotals};